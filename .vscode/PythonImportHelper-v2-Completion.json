[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "cloudinary.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "CloudinaryField",
        "importPath": "cloudinary.models",
        "description": "cloudinary.models",
        "isExtraImport": true,
        "detail": "cloudinary.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "SummernoteModelAdmin",
        "importPath": "django_summernote.admin",
        "description": "django_summernote.admin",
        "isExtraImport": true,
        "detail": "django_summernote.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "generic",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "dj_database_url",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "dj_database_url",
        "description": "dj_database_url",
        "detail": "dj_database_url",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "BASE_PATH",
        "kind": 5,
        "importPath": ".vscode.font_fix",
        "description": ".vscode.font_fix",
        "peekOfCode": "BASE_PATH = os.environ.get(\"GITPOD_REPO_ROOT\")\nwith open(f\"{BASE_PATH}/.vscode/settings.json\", \"r+\") as f:\n    content = json.loads(f.read())\n    if \"terminal.integrated.fontFamily\" not in content:\n        print(\"Adding wider and higher font settings\")\n        content[\"terminal.integrated.lineHeight\"] = 1.2\n        content[\"terminal.integrated.letterSpacing\"] = 2\n    else:\n        print(\"Wider and higher font settings already added!\")\n    f.seek(0, os.SEEK_SET)",
        "detail": ".vscode.font_fix",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0001_initial",
        "description": "blog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Post',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "blog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "blog.migrations.0002_alter_post_options",
        "description": "blog.migrations.0002_alter_post_options",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('blog', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterModelOptions(\n            name='post',\n            options={'ordering': ['-created_on']},\n        ),\n    ]",
        "detail": "blog.migrations.0002_alter_post_options",
        "documentation": {}
    },
    {
        "label": "PostAdmin",
        "kind": 6,
        "importPath": "blog.admin",
        "description": "blog.admin",
        "peekOfCode": "class PostAdmin(SummernoteModelAdmin):\n    list_display = ('title', 'slug', 'status', 'created_on')\n    search_fields = ['title', 'content']\n    list_filter = ('status', 'created_on')\n    prepopulated_fields = {'slug': ('title',)}\n    summernote_fields = ('content',)\n@admin.register(Comment)\nclass CommentAdmin(admin.ModelAdmin):\n    list_display = ('name', 'body', 'post', 'created_on', 'approved')\n    list_filter = ('approved', 'created_on')",
        "detail": "blog.admin",
        "documentation": {}
    },
    {
        "label": "CommentAdmin",
        "kind": 6,
        "importPath": "blog.admin",
        "description": "blog.admin",
        "peekOfCode": "class CommentAdmin(admin.ModelAdmin):\n    list_display = ('name', 'body', 'post', 'created_on', 'approved')\n    list_filter = ('approved', 'created_on')\n    search_fields = ('name', 'email', 'body')\n    actions = ['approve_comments']\n    def approve_comments(self, request, queryset):\n        queryset.update(approved=True)",
        "detail": "blog.admin",
        "documentation": {}
    },
    {
        "label": "BlogConfig",
        "kind": 6,
        "importPath": "blog.apps",
        "description": "blog.apps",
        "peekOfCode": "class BlogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'blog'",
        "detail": "blog.apps",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Post(models.Model):\n    title = models.CharField(max_length=200, unique=True)\n    slug = models.SlugField(max_length=200, unique=True)\n    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='blog_post')\n    updated_on = models.DateTimeField(auto_now=True)\n    content = models.TextField()\n    featured_image = CloudinaryField('image', default='placeholder')\n    excerpt = models.TextField(blank=True)\n    created_on = models.DateTimeField(auto_now_add=True)\n    status = models.IntegerField(choices=STATUS, default=0)",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "class Comment(models.Model):\n    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name='comments')\n    name = models.CharField(max_length=80)\n    email = models.EmailField()\n    body = models.TextField()\n    created_on = models.DateTimeField(auto_now_add=True)\n    approved = models.BooleanField(default=False)\n    class Meta:\n        ordering = ['created_on']\n    def __str__(self):",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "STATUS",
        "kind": 5,
        "importPath": "blog.models",
        "description": "blog.models",
        "peekOfCode": "STATUS = ((0, 'Draft'), (1, 'Published'))\n# Create your models here.\nclass Post(models.Model):\n    title = models.CharField(max_length=200, unique=True)\n    slug = models.SlugField(max_length=200, unique=True)\n    author = models.ForeignKey(User, on_delete=models.CASCADE, related_name='blog_post')\n    updated_on = models.DateTimeField(auto_now=True)\n    content = models.TextField()\n    featured_image = CloudinaryField('image', default='placeholder')\n    excerpt = models.TextField(blank=True)",
        "detail": "blog.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "blog.urls",
        "description": "blog.urls",
        "peekOfCode": "urlpatterns = [\n    path('', views.PostList.as_view(), name='home')\n]",
        "detail": "blog.urls",
        "documentation": {}
    },
    {
        "label": "PostList",
        "kind": 6,
        "importPath": "blog.views",
        "description": "blog.views",
        "peekOfCode": "class PostList(generic.ListView):\n    model = Post\n    queryset = Post.objects.filter(status=1).order_by(\"-created_on\")\n    template_name = \"index.html\"\n    paginate_by = 6",
        "detail": "blog.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "codestar.asgi",
        "description": "codestar.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "codestar.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nTEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"mb2test.herokuapp.com\", \"localhost\", \"127.0.0.1\"]\n# Application definition",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES_DIR",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"mb2test.herokuapp.com\", \"localhost\", \"127.0.0.1\"]\n# Application definition\nINSTALLED_APPS = [",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get('SECRET_KEY')\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"mb2test.herokuapp.com\", \"localhost\", \"127.0.0.1\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"mb2test.herokuapp.com\", \"localhost\", \"127.0.0.1\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'cloudinary_storage',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"mb2test.herokuapp.com\", \"localhost\", \"127.0.0.1\"]\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'cloudinary_storage',\n    'django.contrib.staticfiles',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'cloudinary_storage',\n    'django.contrib.staticfiles',\n    'cloudinary',\n    'django_summernote',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    # 'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'codestar.urls'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "ROOT_URLCONF = 'codestar.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [TEMPLATES_DIR],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [TEMPLATES_DIR],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "WSGI_APPLICATION = 'codestar.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\n# DATABASES = {\n#     'default': {\n#         'ENGINE': 'django.db.backends.sqlite3',\n#         'NAME': BASE_DIR / 'db.sqlite3',\n#     }\n# }\nDATABASES = {",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "DATABASES = {\n    'default': dj_database_url.parse(os.environ.get(\"DATABASE_URL\"))\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nMEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nMEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nMEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nMEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nMEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nDEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_FILE_STORAGE",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'\nSTATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "STATICFILES_STORAGE = 'cloudinary_storage.storage.StaticHashedCloudinaryStorage'\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\nSTATIC_ROOT  = os.path.join(BASE_DIR, 'staticfiles')\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "codestar.settings",
        "description": "codestar.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "codestar.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "codestar.urls",
        "description": "codestar.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('summernote/', include('django_summernote.urls')),\n    path('', include('blog.urls'), name='blog_urls'),\n]",
        "detail": "codestar.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "codestar.wsgi",
        "description": "codestar.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "codestar.wsgi",
        "documentation": {}
    },
    {
        "label": "os.environ['DATABASE_URL']",
        "kind": 5,
        "importPath": "env",
        "description": "env",
        "peekOfCode": "os.environ['DATABASE_URL'] = 'postgres://dkvsyprpecyjlr:9752dd7ab8b90d026201d64107328f4a6efc6df984e601d437e406311576ee94@ec2-52-17-1-206.eu-west-1.compute.amazonaws.com:5432/dbuohia3afigae'\nos.environ['SECRET_KEY'] = 'secret2021!!!'\nos.environ['CLOUDINARY_URL'] = 'cloudinary://458241221221697:9gnhcXbuQayWFOJduQi3aGXWivg@frank2021'",
        "detail": "env",
        "documentation": {}
    },
    {
        "label": "os.environ['SECRET_KEY']",
        "kind": 5,
        "importPath": "env",
        "description": "env",
        "peekOfCode": "os.environ['SECRET_KEY'] = 'secret2021!!!'\nos.environ['CLOUDINARY_URL'] = 'cloudinary://458241221221697:9gnhcXbuQayWFOJduQi3aGXWivg@frank2021'",
        "detail": "env",
        "documentation": {}
    },
    {
        "label": "os.environ['CLOUDINARY_URL']",
        "kind": 5,
        "importPath": "env",
        "description": "env",
        "peekOfCode": "os.environ['CLOUDINARY_URL'] = 'cloudinary://458241221221697:9gnhcXbuQayWFOJduQi3aGXWivg@frank2021'",
        "detail": "env",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'codestar.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]